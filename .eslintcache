[{"/home/mikhailandreev/Documents/code_go/poems/front-end/src/index.js":"1","/home/mikhailandreev/Documents/code_go/poems/front-end/src/reportWebVitals.js":"2","/home/mikhailandreev/Documents/code_go/poems/front-end/src/App.js":"3","/home/mikhailandreev/Documents/code_go/poems/front-end/src/history.js":"4","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WritePage/WritePage.js":"5","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Header/Header.js":"6","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WelcomePage/WelcomePage.js":"7","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PrivateRoute.js":"8","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Background/Background.js":"9","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Poem/Poem.js":"10","/home/mikhailandreev/Documents/code_go/poems/front-end/src/utils.js":"11","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Poem/Line.js":"12","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WritePage/PoemInput.js":"13","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/react-auth0-spa.js":"14","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/api.js":"15","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/MyPoemsPage.js":"16","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/ReadAllPoemsPage.js":"17","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/PoemsOverview.js":"18","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/PoemPreview.js":"19","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemPage/PoemPage.js":"20","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/ui-msg.js":"21","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/canAddLineToPoem.js":"22"},{"size":926,"mtime":1612652198675,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1610793228998,"results":"25","hashOfConfig":"26"},{"size":2454,"mtime":1612647411309,"results":"27","hashOfConfig":"24"},{"size":87,"mtime":1610795062490,"results":"28","hashOfConfig":"24"},{"size":3751,"mtime":1612651622587,"results":"29","hashOfConfig":"24"},{"size":1214,"mtime":1612648608357,"results":"30","hashOfConfig":"24"},{"size":1180,"mtime":1612648665173,"results":"31","hashOfConfig":"24"},{"size":972,"mtime":1611083955108,"results":"32","hashOfConfig":"24"},{"size":424,"mtime":1610799227720,"results":"33","hashOfConfig":"24"},{"size":4322,"mtime":1612654255647,"results":"34","hashOfConfig":"24"},{"size":1183,"mtime":1612653364375,"results":"35","hashOfConfig":"24"},{"size":521,"mtime":1612653378603,"results":"36","hashOfConfig":"24"},{"size":1710,"mtime":1612640776545,"results":"37","hashOfConfig":"24"},{"size":3204,"mtime":1611490110583,"results":"38","hashOfConfig":"24"},{"size":2986,"mtime":1612643665707,"results":"39","hashOfConfig":"24"},{"size":240,"mtime":1611476075896,"results":"40","hashOfConfig":"24"},{"size":268,"mtime":1611250433644,"results":"41","hashOfConfig":"24"},{"size":3087,"mtime":1612638906430,"results":"42","hashOfConfig":"24"},{"size":1677,"mtime":1612212822774,"results":"43","hashOfConfig":"24"},{"size":1194,"mtime":1612651163430,"results":"44","hashOfConfig":"24"},{"size":1131,"mtime":1612640523242,"results":"45","hashOfConfig":"24"},{"size":245,"mtime":1612637107298,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"dtjg06",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16broni",{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/home/mikhailandreev/Documents/code_go/poems/front-end/src/index.js",[],["100","101"],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/reportWebVitals.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/App.js",["102","103"],"import './App.css';\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport {useAuth0} from \"./helpers/react-auth0-spa\";\nimport {ThreeDots} from '@agney/react-loading';\nimport {Slide, ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Header from './components/Header/Header'\nimport WritePage from './components/WritePage/WritePage'\nimport ReadAllPoemsPage from './components/PoemsOverview/ReadAllPoemsPage'\nimport MyPoemsPage from \"./components/PoemsOverview/MyPoemsPage\";\nimport PoemPage from \"./components/PoemPage/PoemPage\";\nimport WelcomePage from \"./components/WelcomePage/WelcomePage\"\nimport Background from \"./components/Background/Background\";\nimport {useApi} from \"./helpers/api\";\n\nfunction App() {\n    const {isAuthenticated} = useAuth0();\n    const {loading} = useAuth0();\n    const {anonymous, toggleAnonymous} = useApi();\n\n    return <div className={\"app-con \" + (anonymous ? \"darkmode\" : \"\")}>\n        <Background/>\n        {loading ? <ThreeDots className=\"big-loader\" width=\"100\"/> :\n            <div className=\"app-wrapper\">\n                <BrowserRouter>\n                    {isAuthenticated && <Header anonymous={anonymous}\n                                                toggleAnonymous={toggleAnonymous}/>} {/*To-do: better logic for hiding header on Welcome*/}\n\n                    <Switch>\n                        <Route path='/welcome' component={WelcomePage}/>\n                        <PrivateRoute path='/write' component={WritePage}/>\n\n                        {/*<PrivateRoute path='/read/:poemid' component={PoemPage}/>\n                        <PrivateRoute path='/read' component={ReadAllPoemsPage}/>*/}\n\n                        <PrivateRoute path='/my_poems/:poemid' component={PoemPage}/>\n                        <PrivateRoute path='/my_poems' component={MyPoemsPage}/>\n                        <Route component={isAuthenticated ? WritePage : WelcomePage}/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        }\n        <ToastContainer\n            position=\"bottom-right\"\n            autoClose={5000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            transition={Slide}\n        />\n    </div>;\n}\n\nexport default App;\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/history.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WritePage/WritePage.js",["104","105"],"import React, {useEffect, useState} from \"react\";\nimport \"./writePage.css\"\nimport {REQ_STATUS} from \"../../utils\";\nimport {useApi} from \"../../helpers/api\";\nimport Poem from \"../Poem/Poem\";\nimport PoemInput from \"./PoemInput\";\nimport {getErrorMessage, POEM_SEND_ERR, showError, showInfo, showSuccess} from \"../../helpers/ui-msg\";\nimport {useMediaQuery} from \"react-responsive\";\nimport {Link} from \"react-router-dom\";\n\nfunction WritePage() {\n    const [error, setError] = useState(\"\")\n\n    const {getRandomPoem, submitPoem} = useApi();\n    const [poem, setPoem] = useState()\n    const [loadPoemStatus, setLoadPoemStatus] = useState(REQ_STATUS.NOT_STARTED);\n    const [addingPoem, setAddingPoem] = useState(false);\n    const [submitPoemStatus, setSubmitPoemStatus] = useState(REQ_STATUS.NOT_STARTED);\n    const isMobile = useMediaQuery({query: '(max-width: 480px)'})\n\n    const getNewPoem = () => {\n        setLoadPoemStatus(REQ_STATUS.LOADING);\n        getRandomPoem().then(response => {\n            if (response.status === \"success\") {\n                setLoadPoemStatus(REQ_STATUS.SUCCESS);\n                setPoem(response.data);\n            } else if (response.status === \"error\" && response.httpStatus === 404) {\n                // No editable poems.\n                setLoadPoemStatus(REQ_STATUS.FAIL);\n                setPoem(null);\n            } else {\n                // Request gone wrong.\n                setLoadPoemStatus(REQ_STATUS.FAIL);\n                setError(response.message);\n            }\n        }).catch(err => {\n            setError(\"Can't load this poem.\")\n        });\n    }\n    useEffect(getNewPoem, []);\n\n\n    const onSubmitPoem = (title, firstLine) => {\n        if (!title || !firstLine || firstLine.length === 0 || title.length === 0) return;\n        setSubmitPoemStatus(REQ_STATUS.LOADING)\n        submitPoem(title, firstLine).then(response => {\n            if (response.status === \"success\") {\n                // Updated Poem is inside response.data.\n                setSubmitPoemStatus(REQ_STATUS.SUCCESS);\n                setPoem(response.data);\n                setAddingPoem(false);\n                showSuccess(\"Poem created.\");\n                getNewPoem()\n            } else {\n                setError(response.message);\n                setSubmitPoemStatus(REQ_STATUS.FAIL);\n                showError(getErrorMessage(POEM_SEND_ERR));\n            }\n        }).catch(() => setError(\"Couldn't submit this poem. Try reloading the page.\"));\n    };\n\n    return <div>\n        <p className=\"page-desc\">\n            {error === \"\" ?\n                (addingPoem ? <span>Do your thing.</span> :\n                    (poem == null ? <span>No poems going around at the moment... Start your own!</span> :\n                        (isMobile ? <span>Here's a poem someone started. Add a line and watch it grow under\n                             <Link to=\"/my_poems\"> my poems</Link> or start your own.</span> : <span>Here's a poem someone started.\n            You get one shot to add a line. If you choose to skip, the poem flies away to someone else.\n                But if you don't, you can watch it grow under <i>my poems</i>.</span>)))\n                : <span>{error}</span>\n            }\n        </p>\n        <div className={\"write-page-btn-con\" + (addingPoem ? ' hidden' : '')}>\n            <button onClick={() => setAddingPoem(true)}>Add Poem</button>\n            {poem == null ? null : <button onClick={getNewPoem}>Skip Poem</button>}\n        </div>\n        {addingPoem ? <PoemInput onSubmit={onSubmitPoem} submitStatus={submitPoemStatus}/>\n            : (poem != null ?\n                <Poem poem={poem} setPoem={setPoem} showSkeleton={loadPoemStatus === REQ_STATUS.LOADING}/> : null)}\n    </div>;\n}\n\nexport default WritePage;\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Header/Header.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WelcomePage/WelcomePage.js",["106"],"import React, {useState} from \"react\"\nimport {useAuth0} from \"../../helpers/react-auth0-spa\";\nimport {Redirect} from \"react-router-dom\"\nimport {Button} from \"react-materialize\";\nimport ParticleEffectButton from 'react-particle-effect-button'\n\nimport './welcome.css'\n\nconst PARTICLE_DURATION = 700;\nfunction WelcomePage() {\n    const {isAuthenticated, loginWithRedirect} = useAuth0();\n    let [loginClicked, setLoginClicked] = useState();\n\n    function loginClick() {\n        setLoginClicked(true);\n        setTimeout(loginWithRedirect, PARTICLE_DURATION * 0.5)\n    }\n\n    if (isAuthenticated)\n        return <Redirect to='/write'/>\n    return <div className=\"welcome-con\">\n        <h2>\"None of us is as smart as all of us.\" <span>—&nbsp;&nbsp;&nbsp;Ken Blanchard</span></h2>\n        <p>You add a line, she adds a line... See what you can create.</p>\n        <ParticleEffectButton color='#A2D2FF' hidden={loginClicked}\n        duration={PARTICLE_DURATION} direction=\"top\" className=\"welcome-login-btn-con\">\n            <button className=\"welcome-login-btn\" onClick={loginClick}>LOG IN VIA AUTH0</button>\n        </ParticleEffectButton>\n    </div>;\n}\n\nexport default WelcomePage;\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PrivateRoute.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Background/Background.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Poem/Poem.js",["107","108","109"],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/utils.js",["110"],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Poem/Line.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WritePage/PoemInput.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/react-auth0-spa.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/api.js",["111","112","113","114","115","116"],"import {useAuth0} from \"./react-auth0-spa\";\nimport {useCallback, useState} from \"react\";\n\nconst defaultResponse = {\n    status: \"error\",\n    message: \"Trouble communicating with our servers.\"\n}\n\nfunction useApi() {\n    // Function for getting the Access Token\n    const {getTokenSilently} = useAuth0()\n    const [anonymous, setAnonymous] = useState(false)\n    const toggleAnonymous = () => setAnonymous(!anonymous)\n\n    // If any of these requests return null, communication with the server was unsuccessful.\n    // (invalid auth token, blabla)\n    // To-Do: Pass statuses down to the caller to reflect particular statuses in UI.\n    const makeRequest = async (path, method = 'GET', body = undefined) => {\n        let token = await getTokenSilently();\n        try {\n            let params = {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }\n            };\n            if (method === 'POST') {\n                params['body'] = JSON.stringify({...body, anonymous});\n            }\n            const response = await fetch(path, params);\n            let responseBody = await response.json();\n            if (responseBody.status === undefined) return defaultResponse; // Auth errors result in a string.\n\n            responseBody.httpStatus = response.status;\n            return responseBody;\n        } catch (e) {\n            return defaultResponse;\n        }\n    }\n\n    const getPoemByID = useCallback(async (poemId) =>\n            makeRequest(\"/api/get/poem/\" + poemId)\n        , [])\n\n    const submitLine = useCallback(async (poemId, content) =>\n            makeRequest('/api/add/line', 'POST', {poemId, content})\n        , [])\n\n    const getRandomPoem = useCallback(async () =>\n            makeRequest('/api/get/poem/random')\n        , [])\n\n    const submitPoem = useCallback(async (title, firstLine) => {\n        if (!title || !title.length || title.length === 0) throw new Error(\"Trying to send titleless Poem.\");\n        return makeRequest('/api/add/poem', 'POST', {title, firstLine});\n    }, [])\n\n\n    const getUserPoems = useCallback(async (limit, offset) =>\n            makeRequest(`/api/get/my_poems?limit=${limit}&offset=${offset}`)\n        , [])\n\n    const getPoems = useCallback(async (limit, offset) =>\n            makeRequest(`/api/get/poems/all?limit=${limit}&offset=${offset}`)\n        , [])\n\n    return {toggleAnonymous, anonymous, getPoemByID, getPoems, getRandomPoem, getUserPoems, submitLine, submitPoem};\n}\n\nexport {useApi};\n/*\n * Poem request body will be something like :\n * {\n    \"id\":\"20f8707d6000108\",\n    \"title\":\"MyPoem\",\n    \"dateCreated\":\"2021-01-15T00:00:00+01:00\",\n    \"lines\":[\n      {\n         \"line_id\":\"8010006d7078f02\",\n         \"date_created\":\"2021-01-14T00:00:00+01:00\",\n         \"creator\":\"mikhail\",\n         \"content\":\"Two roads diverged in yellow wood\",\n         \"poem_id\":\"20f8707d6000108\"\n      }\n    ]\n    }\n */\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/MyPoemsPage.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/ReadAllPoemsPage.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/PoemsOverview.js",["117","118","119","120"],"import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport {REQ_STATUS} from \"../../utils\";\nimport PoemPreview from \"./PoemPreview\";\nimport Skeleton from \"react-loading-skeleton\";\nimport ReactPaginate from 'react-paginate';\n\n\nconst getPoemSkeletons = (n) =>\n    Array.from({length: n}, (x, idx) => <Skeleton key={\"poem-skeleton-\" + idx} height={n}/>)\n\nconst POEMS_PER_PAGE = 3;\n// getPoemsFunction is one of the functions from \"/helpers/api.js\".\n//      This pattern is used to generalize \"my_poems\" and \"read\" page to this one.\nfunction PoemsOverview({getPoemsFunction, poemsPerPage = 7}) {\n    const [poems, setPoems] = useState(null)\n    const [error, setError] = useState(\"\");\n    const [loadPoemsStatus, setLoadPoemsStatus] = useState(REQ_STATUS.NOT_STARTED);\n    const [poemSkeletons, setPoemSkeletons] = useState([])\n\n    // implement infinite scrolling with intersection observer\n    let bottomBoundaryRef = useRef(null);\n    const scrollObserver = useCallback(\n        node => {\n            // new IntersectionObserver(entries => {\n            //     entries.forEach(en => {\n            //         if (en.intersectionRatio > 0) {\n            //             // Get more poems.\n            //             setLoadPoemsStatus(REQ_STATUS.LOADING);\n            //             getPoemsFunction(POEMS_PER_PAGE, poems.length).then(newPoems => {\n            //                 setPoems(poems.concat(newPoems))\n            //                 setLoadPoemsStatus(REQ_STATUS.SUCCESS)\n            //             }).catch(err => setLoadPoemsStatus(REQ_STATUS.FAIL))\n            //         }\n            //     });\n            // }).observe(node);\n        },\n        [setPoems]\n    );\n    // useEffect(() => {\n    //     if (bottomBoundaryRef.current) {\n    //         scrollObserver(bottomBoundaryRef.current);\n    //     }\n    // }, [scrollObserver, bottomBoundaryRef]);\n\n    const getPoemsInit = () => {\n        setLoadPoemsStatus(REQ_STATUS.LOADING)\n        getPoemsFunction(POEMS_PER_PAGE, 0).then(response => {\n            if (response.status === \"success\") {\n                setLoadPoemsStatus(REQ_STATUS.SUCCESS);\n                setPoems(response.data);\n            } else {\n                setLoadPoemsStatus(REQ_STATUS.FAIL);\n                setError(response.message)\n            }\n        }).catch(e => {\n            console.error(e);\n            setError(\"Can't get poems right now.\")\n        });\n    }\n\n    useEffect(() => {\n        getPoemsInit();\n        setPoemSkeletons(getPoemSkeletons(POEMS_PER_PAGE));\n    }, []);\n\n    return <div className=\"poems-overview\">\n        {(loadPoemsStatus <= REQ_STATUS.LOADING) ? poemSkeletons :\n            error === \"\" && poems != null\n            ? (poems.length > 0 ? poems.map((poem, idx) => <PoemPreview poem={poem} linkPrefix={\"my_poems\"}\n            key={\"poem-preview-\" + idx}/>)\n            : <span>No poems here... You should go write some!</span>)\n            : <span className=\"error\">{error}</span>}\n\n        <div id='page-bottom-boundary' ref={bottomBoundaryRef}/>\n    </div>\n}\n\nexport default PoemsOverview;\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/PoemPreview.js",["121","122"],"import React, {useState} from \"react\"\nimport \"./read-page.css\"\nimport {REQ_STATUS, timestampToShortString} from \"../../utils\";\n\nimport Tilt from 'react-parallax-tilt';\nimport {useAuth0} from \"../../helpers/react-auth0-spa\";\nimport {Link} from \"react-router-dom\";\n\nconst PREVIEW_LINES_NUM = 12;\nconst MAX_TILT_ANGLE = 8;\n\nfunction PoemPreview({poem, linkPrefix}) {\n    const {user} = useAuth0();\n    // To-Do: Add parallax hover effect + text shadow.\n    if (!linkPrefix) linkPrefix = '';\n    return <Link to={linkPrefix + '/' + poem.id}>\n        <Tilt tiltReverse={true} tiltMaxAngleX={MAX_TILT_ANGLE} tiltMaxAngleY={MAX_TILT_ANGLE} className=\"poem-preview\">\n            <h3>{poem.title}</h3>\n            <div className=\"poem-preview-content\">\n                <p>\n                    {poem.lines && poem.lines.slice(0, PREVIEW_LINES_NUM).map((line, idx) =>\n                        <li className={\"poem-preview-line\" + (line.creator === user.nickname ? ' personal' : '')} key={\"my-preview-\" + idx}\n                            style={{\n                                opacity: 1 - (idx + 1) / PREVIEW_LINES_NUM\n                            }}>\n                            {line.content}\n                        </li>)}\n                </p>\n            </div>\n            <div className=\"poem-preview-footer small-boxy\">\n                <span className=\"poem-preview-date\">{timestampToShortString(poem.dateCreated)}</span>\n                <span className=\"poem-preview-creator\">started by {poem.creator === user.nickname ?\n                    <span className='personal'>you</span> : poem.creator}</span>\n            </div>\n        </Tilt>\n    </Link>\n}\n\nexport default PoemPreview\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemPage/PoemPage.js",["123"],"import React, {useEffect, useState} from \"react\"\nimport {REQ_STATUS} from \"../../utils\";\nimport {useParams} from \"react-router-dom\";\nimport {useApi} from \"../../helpers/api\";\nimport Poem from \"../Poem/Poem\";\n\nfunction PoemPage() {\n    const [error, setError] = useState(\"\")\n    const [poem, setPoem] = useState()\n    const api = useApi();\n    const [loadPoemStatus, setLoadPoemStatus] = useState(REQ_STATUS.NOT_STARTED);\n    const {poemid} = useParams();\n    const getPoem = () => {\n        setLoadPoemStatus(REQ_STATUS.LOADING);\n        api.getPoemByID(poemid).then(response => {\n            if (response.status === \"success\") {\n                setLoadPoemStatus(REQ_STATUS.SUCCESS);\n                setPoem(response.data);\n            } else {\n                setLoadPoemStatus(REQ_STATUS.FAIL);\n                setPoem(null);\n                setError(response.message);\n            }\n        }).catch(err => {\n            setError(\"Can't load this poem.\")\n        });\n    }\n    useEffect(getPoem, []);\n    return !error ? <Poem poem={poem} setPoem={setPoem} showSkeleton={loadPoemStatus === REQ_STATUS.LOADING}/> :\n        <span className=\"error\">{error}</span>;\n}\n\nexport default PoemPage;\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/ui-msg.js",["124","125"],"import { toast } from 'react-toastify';\nconst options = {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n};\n\nexport function showSuccess(msg) {\n    toast.success(msg, options);\n}\n\nexport function showError(msg) {\n    toast.error(msg, options);\n}\n\nexport function showInfo(msg) {\n    toast.info(msg, options);\n}\n\nexport const LINE_SEND_ERR = 0;\nexport const POEM_SEND_ERR = 1;\nconst errorMsgs = {\n    LINE_SEND_ERR: [\"Your line got lost in delivery... Try again?\", \"Can't add this line right now...\",\n        \"Remember the line and try later. Something's not working right.\", \"Oops... That didn't work. Try again?\"],\n    POEM_SEND_ERR: [\"Can't do that... Try reloading.\", \"Try adding this poem later.\",\n        \"That didn't work... Reload the page and try again.\"]\n}\nexport function getErrorMessage(errNum) {\n    if (!errorMsgs.hasOwnProperty(errNum)) return \"That didn't work... Please try again later.\"\n    let possibleMessages = errorMsgs[errNum];\n    return possibleMessages[Math.floor(Math.random()*possibleMessages.length)]\n}\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/canAddLineToPoem.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":39,"nodeType":"132","messageId":"133","endLine":2,"endColumn":47},{"ruleId":"130","severity":1,"message":"134","line":11,"column":8,"nodeType":"132","messageId":"133","endLine":11,"endColumn":24},{"ruleId":"130","severity":1,"message":"135","line":7,"column":52,"nodeType":"132","messageId":"133","endLine":7,"endColumn":60},{"ruleId":"136","severity":1,"message":"137","line":40,"column":27,"nodeType":"138","endLine":40,"endColumn":29,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"140","line":4,"column":9,"nodeType":"132","messageId":"133","endLine":4,"endColumn":15},{"ruleId":"130","severity":1,"message":"135","line":8,"column":52,"nodeType":"132","messageId":"133","endLine":8,"endColumn":60},{"ruleId":"130","severity":1,"message":"141","line":8,"column":62,"nodeType":"132","messageId":"133","endLine":8,"endColumn":73},{"ruleId":"130","severity":1,"message":"142","line":28,"column":11,"nodeType":"132","messageId":"133","endLine":28,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":12,"column":5,"nodeType":"145","messageId":"146","endLine":21,"endColumn":6},{"ruleId":"136","severity":1,"message":"147","line":44,"column":11,"nodeType":"138","endLine":44,"endColumn":13,"suggestions":"148"},{"ruleId":"136","severity":1,"message":"147","line":48,"column":11,"nodeType":"138","endLine":48,"endColumn":13,"suggestions":"149"},{"ruleId":"136","severity":1,"message":"147","line":52,"column":11,"nodeType":"138","endLine":52,"endColumn":13,"suggestions":"150"},{"ruleId":"136","severity":1,"message":"147","line":57,"column":8,"nodeType":"138","endLine":57,"endColumn":10,"suggestions":"151"},{"ruleId":"136","severity":1,"message":"147","line":62,"column":11,"nodeType":"138","endLine":62,"endColumn":13,"suggestions":"152"},{"ruleId":"136","severity":1,"message":"147","line":66,"column":11,"nodeType":"138","endLine":66,"endColumn":13,"suggestions":"153"},{"ruleId":"130","severity":1,"message":"154","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":21},{"ruleId":"130","severity":1,"message":"155","line":22,"column":11,"nodeType":"132","messageId":"133","endLine":22,"endColumn":25},{"ruleId":"136","severity":1,"message":"156","line":37,"column":9,"nodeType":"138","endLine":37,"endColumn":19,"suggestions":"157"},{"ruleId":"136","severity":1,"message":"158","line":64,"column":8,"nodeType":"138","endLine":64,"endColumn":10,"suggestions":"159"},{"ruleId":"130","severity":1,"message":"160","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":24},{"ruleId":"130","severity":1,"message":"161","line":3,"column":9,"nodeType":"132","messageId":"133","endLine":3,"endColumn":19},{"ruleId":"136","severity":1,"message":"162","line":28,"column":24,"nodeType":"138","endLine":28,"endColumn":26,"suggestions":"163"},{"ruleId":"130","severity":1,"message":"164","line":23,"column":7,"nodeType":"132","messageId":"133","endLine":23,"endColumn":20},{"ruleId":"130","severity":1,"message":"165","line":24,"column":7,"nodeType":"132","messageId":"133","endLine":24,"endColumn":20},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ReadAllPoemsPage' is defined but never used.","'showInfo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRandomPoem'. Either include it or remove the dependency array.","ArrayExpression",["168"],"'Button' is defined but never used.","'showSuccess' is defined but never used.","'isMobile' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useCallback has a missing dependency: 'makeRequest'. Either include it or remove the dependency array.",["169"],["170"],["171"],["172"],["173"],["174"],"'ReactPaginate' is defined but never used.","'scrollObserver' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'setPoems'. Either exclude it or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'getPoemsInit'. Either include it or remove the dependency array.",["176"],"'useState' is defined but never used.","'REQ_STATUS' is defined but never used.","React Hook useEffect has missing dependencies: 'api' and 'poemid'. Either include them or remove the dependency array.",["177"],"'LINE_SEND_ERR' is assigned a value but never used.","'POEM_SEND_ERR' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"180","fix":"182"},{"desc":"180","fix":"183"},{"desc":"180","fix":"184"},{"desc":"180","fix":"185"},{"desc":"180","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [getRandomPoem]",{"range":"193","text":"194"},"Update the dependencies array to be: [makeRequest]",{"range":"195","text":"196"},{"range":"197","text":"196"},{"range":"198","text":"196"},{"range":"199","text":"196"},{"range":"200","text":"196"},{"range":"201","text":"196"},"Update the dependencies array to be: []",{"range":"202","text":"203"},"Update the dependencies array to be: [getPoemsInit]",{"range":"204","text":"205"},"Update the dependencies array to be: [api, poemid]",{"range":"206","text":"207"},[1623,1625],"[getRandomPoem]",[1609,1611],"[makeRequest]",[1754,1756],[1867,1869],[2127,2129],[2282,2284],[2433,2435],[1678,1688],"[]",[2542,2544],"[getPoemsInit]",[1000,1002],"[api, poemid]"]