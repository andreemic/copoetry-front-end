[{"/home/mikhailandreev/Documents/code_go/poems/front-end/src/index.js":"1","/home/mikhailandreev/Documents/code_go/poems/front-end/src/reportWebVitals.js":"2","/home/mikhailandreev/Documents/code_go/poems/front-end/src/App.js":"3","/home/mikhailandreev/Documents/code_go/poems/front-end/src/history.js":"4","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WritePage/WritePage.js":"5","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Header/Header.js":"6","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WelcomePage/WelcomePage.js":"7","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PrivateRoute.js":"8","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Background/Background.js":"9","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Poem/Poem.js":"10","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Poem/Line.js":"11","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WritePage/PoemInput.js":"12","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/react-auth0-spa.js":"13","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/api.js":"14","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/MyPoemsPage.js":"15","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/ReadAllPoemsPage.js":"16","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/PoemsOverview.js":"17","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/PoemPreview.js":"18","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemPage/PoemPage.js":"19","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/ui-msg.js":"20","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/canAddLineToPoem.js":"21","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/utils.js":"22","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/anonymous.js":"23"},{"size":1001,"mtime":1613155121673,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1610793228998,"results":"26","hashOfConfig":"27"},{"size":2348,"mtime":1613155136986,"results":"28","hashOfConfig":"25"},{"size":87,"mtime":1610795062490,"results":"29","hashOfConfig":"25"},{"size":3842,"mtime":1613163060564,"results":"30","hashOfConfig":"25"},{"size":1537,"mtime":1613156619899,"results":"31","hashOfConfig":"25"},{"size":1180,"mtime":1612648665173,"results":"32","hashOfConfig":"25"},{"size":972,"mtime":1611083955108,"results":"33","hashOfConfig":"25"},{"size":424,"mtime":1610799227720,"results":"34","hashOfConfig":"25"},{"size":8383,"mtime":1613255784098,"results":"35","hashOfConfig":"25"},{"size":490,"mtime":1613164610573,"results":"36","hashOfConfig":"25"},{"size":1718,"mtime":1612909720857,"results":"37","hashOfConfig":"25"},{"size":3178,"mtime":1613078765804,"results":"38","hashOfConfig":"25"},{"size":4253,"mtime":1613249503829,"results":"39","hashOfConfig":"25"},{"size":240,"mtime":1611476075896,"results":"40","hashOfConfig":"25"},{"size":268,"mtime":1611250433644,"results":"41","hashOfConfig":"25"},{"size":3051,"mtime":1612909720906,"results":"42","hashOfConfig":"25"},{"size":2342,"mtime":1612996675856,"results":"43","hashOfConfig":"25"},{"size":1202,"mtime":1612909720885,"results":"44","hashOfConfig":"25"},{"size":1131,"mtime":1612640523242,"results":"45","hashOfConfig":"25"},{"size":264,"mtime":1612995173590,"results":"46","hashOfConfig":"25"},{"size":2056,"mtime":1613252861469,"results":"47","hashOfConfig":"25"},{"size":1242,"mtime":1613156561925,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"dtjg06",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16broni",{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/home/mikhailandreev/Documents/code_go/poems/front-end/src/index.js",[],["104","105"],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/reportWebVitals.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/App.js",["106","107","108"],"import './App.css';\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport {useAuth0} from \"./helpers/react-auth0-spa\";\nimport {ThreeDots} from '@agney/react-loading';\nimport {Slide, ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Header from './components/Header/Header'\nimport WritePage from './components/WritePage/WritePage'\nimport ReadAllPoemsPage from './components/PoemsOverview/ReadAllPoemsPage'\nimport MyPoemsPage from \"./components/PoemsOverview/MyPoemsPage\";\nimport PoemPage from \"./components/PoemPage/PoemPage\";\nimport WelcomePage from \"./components/WelcomePage/WelcomePage\"\nimport Background from \"./components/Background/Background\";\nimport {Context} from \"./helpers/anonymous\"\nimport React, {useContext} from \"react\";\n\nfunction App() {\n    const {isAuthenticated} = useAuth0();\n    const {loading} = useAuth0();\n    const [state, dispatch] = useContext(Context);\n\n    return <div className={\"app-con \" + (state.anonymous ? \"darkmode\" : \"\")}>\n        <Background/>\n        {loading ? <ThreeDots className=\"big-loader\" width=\"100\"/> :\n            <div className=\"app-wrapper\">\n                <BrowserRouter>\n                    {isAuthenticated && <Header/>}\n\n                    <Switch>\n                        <Route path='/welcome' component={WelcomePage}/>\n                        <PrivateRoute path='/write' component={WritePage}/>\n\n                        {/*<PrivateRoute path='/read/:poemid' component={PoemPage}/>\n                        <PrivateRoute path='/read' component={ReadAllPoemsPage}/>*/}\n\n                        <PrivateRoute path='/my_poems/:poemid' component={PoemPage}/>\n                        <PrivateRoute path='/my_poems' component={MyPoemsPage}/>\n                        <Route component={isAuthenticated ? WritePage : WelcomePage}/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        }\n        <ToastContainer\n            position=\"bottom-right\"\n            autoClose={5000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            transition={Slide}\n        />\n    </div>;\n}\n\nexport default App;\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/history.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WritePage/WritePage.js",["109","110"],"import React, {useEffect, useState} from \"react\";\nimport \"./writePage.css\"\nimport {REQ_STATUS} from \"../../helpers/utils\";\nimport {useApi} from \"../../helpers/api\";\nimport Poem from \"../Poem/Poem\";\nimport PoemInput from \"./PoemInput\";\nimport {getErrorMessage, POEM_SEND_ERR, showError, showInfo, showSuccess} from \"../../helpers/ui-msg\";\nimport {useMediaQuery} from \"react-responsive\";\nimport {Link} from \"react-router-dom\";\n\nfunction WritePage() {\n    const [error, setError] = useState(\"\")\n\n    const {getRandomPoem, submitPoem} = useApi();\n    const [poem, setPoem] = useState()\n    const [loadPoemStatus, setLoadPoemStatus] = useState(REQ_STATUS.NOT_STARTED);\n    const [addingPoem, setAddingPoem] = useState(false);\n    const [submitPoemStatus, setSubmitPoemStatus] = useState(REQ_STATUS.NOT_STARTED);\n    const isMobile = useMediaQuery({query: '(max-width: 480px)'})\n\n    const getNewPoem = () => {\n        setLoadPoemStatus(REQ_STATUS.LOADING);\n        getRandomPoem().then(response => {\n            if (response.status === \"success\") {\n                setLoadPoemStatus(REQ_STATUS.SUCCESS);\n                setPoem(response.data);\n            } else if (response.status === \"error\" && response.httpStatus === 404) {\n                // No editable poems.\n                setLoadPoemStatus(REQ_STATUS.FAIL);\n                setPoem(null);\n            } else {\n                // Request gone wrong.\n                setLoadPoemStatus(REQ_STATUS.FAIL);\n                setError(response.message);\n            }\n        }).catch(err => {\n            setError(\"Can't load this poem.\")\n        });\n    }\n    useEffect(getNewPoem, []);\n\n\n    const onSubmitPoem = (title, firstLine) => {\n        if (!title || !firstLine || firstLine.length === 0 || title.length === 0) return;\n        setSubmitPoemStatus(REQ_STATUS.LOADING)\n        submitPoem(title, firstLine).then(response => {\n            if (response.status === \"success\") {\n                // Updated Poem is inside response.data.\n                setSubmitPoemStatus(REQ_STATUS.SUCCESS);\n                setTimeout(() => setSubmitPoemStatus(REQ_STATUS.NOT_STARTED), 700)\n                setPoem(response.data);\n                setAddingPoem(false);\n                showSuccess(\"Poem created.\");\n                getNewPoem()\n            } else {\n                setError(response.message);\n                setSubmitPoemStatus(REQ_STATUS.FAIL);\n                showError(getErrorMessage(POEM_SEND_ERR));\n            }\n        }).catch(() => setError(\"Couldn't submit this poem. Try reloading the page.\"));\n    };\n\n    return <div>\n        <p className=\"page-desc\">\n            {error === \"\" ?\n                (addingPoem ? <span>Do your thing.</span> :\n                    (poem == null ? <span>No poems going around at the moment... Start your own!</span> :\n                        (isMobile ? <span>Here's a poem someone started. Add a line and watch it grow under\n                             <Link to=\"/my_poems\"> my poems</Link> or start your own.</span> : <span>Here's a poem someone started.\n            You get one shot to add a line. If you choose to skip, the poem flies away to someone else.\n                But if you don't, you can watch it grow under <i>my poems</i>.</span>)))\n                : <span>{error}</span>\n            }\n        </p>\n        <div className={\"write-page-btn-con\" + (addingPoem ? ' hidden' : '')}>\n            <button onClick={() => setAddingPoem(true)}>Add Poem</button>\n            {poem == null ? null : <button onClick={getNewPoem}>Skip Poem</button>}\n        </div>\n        {addingPoem ? <PoemInput onSubmit={onSubmitPoem} submitStatus={submitPoemStatus}/>\n            : (poem != null ?\n                <Poem poem={poem} setPoem={setPoem} showSkeleton={loadPoemStatus === REQ_STATUS.LOADING}/> : null)}\n    </div>;\n}\n\nexport default WritePage;\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Header/Header.js",["111","112"],"import React, {useContext, useEffect, useState} from \"react\"\nimport {useAuth0} from \"../../helpers/react-auth0-spa\";\nimport 'materialize-css';\nimport './header.css';\nimport {NavLink} from \"react-router-dom\";\nimport {useApi} from \"../../helpers/api\";\nimport {Context} from \"../../helpers/anonymous\";\n\nfunction Header() {\n    const {isAuthenticated, logout, user} = useAuth0();\n    const {updateNeedsToVote} = useApi();\n    const [state, dispatch] = useContext(Context);\n\n\n    useEffect(updateNeedsToVote, [user]);\n\n    return <section className=\"header\">\n        <span className=\"header-links\">\n            {/*{<NavLink to=\"/read\" activeClassName=\"selected\">read</NavLink>}*/}\n            {isAuthenticated && <NavLink to=\"/write\" activeClassName=\"selected\">write</NavLink>}\n            {isAuthenticated && <NavLink to=\"/my_poems\" activeClassName=\"selected\" className={state.needsToVote ? \"notif\" : \"\"}>my poems</NavLink>}\n        </span>\n\n        {isAuthenticated && <span className=\"header-user-area\">\n            <span className={\"anonymous-toggler \" + (state.anonymous\n                ? \"anonymous\" : \"\")} onClick={() => dispatch({type: 'TOGGLE_ANONYMOUS'})}/>\n            <span className=\"header-logout-label\">Not <span className=\"username\">{user.nickname}</span>?</span>\n            <span className=\"small-boxy small-boxy-btn header-logout-btn\" onClick={logout}>Log Out</span>\n            <span className=\"header-logout-mobile material-icons\" onClick={logout}>logout</span>\n        </span>}\n\n    </section>\n}\n\nexport default Header;\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WelcomePage/WelcomePage.js",["113"],"import React, {useState} from \"react\"\nimport {useAuth0} from \"../../helpers/react-auth0-spa\";\nimport {Redirect} from \"react-router-dom\"\nimport {Button} from \"react-materialize\";\nimport ParticleEffectButton from 'react-particle-effect-button'\n\nimport './welcome.css'\n\nconst PARTICLE_DURATION = 700;\nfunction WelcomePage() {\n    const {isAuthenticated, loginWithRedirect} = useAuth0();\n    let [loginClicked, setLoginClicked] = useState();\n\n    function loginClick() {\n        setLoginClicked(true);\n        setTimeout(loginWithRedirect, PARTICLE_DURATION * 0.5)\n    }\n\n    if (isAuthenticated)\n        return <Redirect to='/write'/>\n    return <div className=\"welcome-con\">\n        <h2>\"None of us is as smart as all of us.\" <span>—&nbsp;&nbsp;&nbsp;Ken Blanchard</span></h2>\n        <p>You add a line, she adds a line... See what you can create.</p>\n        <ParticleEffectButton color='#A2D2FF' hidden={loginClicked}\n        duration={PARTICLE_DURATION} direction=\"top\" className=\"welcome-login-btn-con\">\n            <button className=\"welcome-login-btn\" onClick={loginClick}>LOG IN VIA AUTH0</button>\n        </ParticleEffectButton>\n    </div>;\n}\n\nexport default WelcomePage;\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PrivateRoute.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Background/Background.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Poem/Poem.js",["114","115"],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/Poem/Line.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/WritePage/PoemInput.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/react-auth0-spa.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/api.js",["116","117","118","119","120","121","122","123","124"],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/MyPoemsPage.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/ReadAllPoemsPage.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/PoemsOverview.js",["125","126","127"],"import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport {REQ_STATUS} from \"../../helpers/utils\";\nimport PoemPreview from \"./PoemPreview\";\nimport Skeleton from \"react-loading-skeleton\";\n\n\nconst getPoemSkeletons = (n) =>\n    Array.from({length: n}, (x, idx) => <Skeleton key={\"poem-skeleton-\" + idx} height={n}/>)\n\nconst POEMS_PER_PAGE = 3;\n// getPoemsFunction is one of the functions from \"/helpers/api.js\".\n//      This pattern is used to generalize \"my_poems\" and \"read\" page to this one.\nfunction PoemsOverview({getPoemsFunction, poemsPerPage = 7}) {\n    const [poems, setPoems] = useState(null)\n    const [error, setError] = useState(\"\");\n    const [loadPoemsStatus, setLoadPoemsStatus] = useState(REQ_STATUS.NOT_STARTED);\n    const [poemSkeletons, setPoemSkeletons] = useState([])\n\n    // implement infinite scrolling with intersection observer\n    let bottomBoundaryRef = useRef(null);\n    const scrollObserver = useCallback(\n        node => {\n            // new IntersectionObserver(entries => {\n            //     entries.forEach(en => {\n            //         if (en.intersectionRatio > 0) {\n            //             // Get more poems.\n            //             setLoadPoemsStatus(REQ_STATUS.LOADING);\n            //             getPoemsFunction(POEMS_PER_PAGE, poems.length).then(newPoems => {\n            //                 setPoems(poems.concat(newPoems))\n            //                 setLoadPoemsStatus(REQ_STATUS.SUCCESS)\n            //             }).catch(err => setLoadPoemsStatus(REQ_STATUS.FAIL))\n            //         }\n            //     });\n            // }).observe(node);\n        },\n        [setPoems]\n    );\n    // useEffect(() => {\n    //     if (bottomBoundaryRef.current) {\n    //         scrollObserver(bottomBoundaryRef.current);\n    //     }\n    // }, [scrollObserver, bottomBoundaryRef]);\n\n    const getPoemsInit = () => {\n        setLoadPoemsStatus(REQ_STATUS.LOADING)\n        getPoemsFunction(POEMS_PER_PAGE, 0).then(response => {\n            if (response.status === \"success\") {\n                setLoadPoemsStatus(REQ_STATUS.SUCCESS);\n                setPoems(response.data);\n            } else {\n                setLoadPoemsStatus(REQ_STATUS.FAIL);\n                setError(response.message)\n            }\n        }).catch(e => {\n            console.error(e);\n            setError(\"Can't get poems right now.\")\n        });\n    }\n\n    useEffect(() => {\n        getPoemsInit();\n        setPoemSkeletons(getPoemSkeletons(POEMS_PER_PAGE));\n    }, []);\n\n    return <div className=\"poems-overview\">\n        {(loadPoemsStatus <= REQ_STATUS.LOADING) ? poemSkeletons :\n            error === \"\" && poems != null\n            ? (poems.length > 0 ? poems.map((poem, idx) => <PoemPreview poem={poem} linkPrefix={\"my_poems\"}\n            key={\"poem-preview-\" + idx}/>)\n            : <span>No poems here... You should go write some!</span>)\n            : <span className=\"error\">{error}</span>}\n\n        <div id='page-bottom-boundary' ref={bottomBoundaryRef}/>\n    </div>\n}\n\nexport default PoemsOverview;\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemsOverview/PoemPreview.js",["128","129"],"import React, {useState} from \"react\"\nimport \"./read-page.css\"\nimport {REQ_STATUS, timestampToShortString, getActiveVotingFromPoem} from \"../../helpers/utils\";\n\nimport Tilt from 'react-parallax-tilt';\nimport {useAuth0} from \"../../helpers/react-auth0-spa\";\nimport {Link} from \"react-router-dom\";\nimport {useMediaQuery} from \"react-responsive/src\";\n\nconst PREVIEW_LINES_NUM = 12;\nconst MAX_TILT_ANGLE = 8;\n\nfunction PoemPreview({poem, linkPrefix}) {\n    const {user} = useAuth0();\n    if (!linkPrefix) linkPrefix = '';\n    const userCanHover = !useMediaQuery({\n        query: '(hover: none)'\n    })\n    const activeVoting = getActiveVotingFromPoem(poem)\n    const userNeedsToVote = activeVoting !== null && !activeVoting.userVoted;\n    return <Link to={linkPrefix + '/' + poem.id}>\n        <Tilt tiltEnable={userCanHover && !poem.completed} tiltReverse={true} tiltMaxAngleX={MAX_TILT_ANGLE} tiltMaxAngleY={MAX_TILT_ANGLE}\n              className={\"poem-preview \" + (poem.completed ? \"completed \" : \"\") + (userNeedsToVote ? \"voting-active\" : \"\")}>\n            <h3>{poem.title}</h3>\n            <div className=\"poem-preview-content\">\n                <p>\n                    {poem.lines && poem.lines.slice(0, PREVIEW_LINES_NUM).map((line, idx) =>\n                        <li className={\"poem-preview-line\" + (line.creator === user.nickname ? ' personal' : '')} key={\"my-preview-\" + idx}\n                            style={{\n                                opacity: 1 - (idx + 1) / PREVIEW_LINES_NUM\n                            }}>\n                            {line.content}\n                        </li>)}\n                </p>\n            </div>\n            {userNeedsToVote ?  <div className={\"poem-preview-votemsg\"}>\n                    <div>One of your co-authors thinks this poem is done. Do you agree?</div>\n                    <div className={\"small-boxy small-boxy-btn\"}>Go Vote</div>\n            </div>\n                : <div className=\"poem-preview-footer small-boxy\">\n                <span className=\"poem-preview-date\">{timestampToShortString(poem.dateCreated, true)}</span>\n                <span className=\"poem-preview-creator\">started by {poem.creator === user.nickname ?\n                    <span className='personal'>you</span> : poem.creator}</span>\n            </div>}\n        </Tilt>\n    </Link>\n}\n\nexport default PoemPreview\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/components/PoemPage/PoemPage.js",["130"],"import React, {useEffect, useState} from \"react\"\nimport {REQ_STATUS} from \"../../utils\";\nimport {useParams} from \"react-router-dom\";\nimport {useApi} from \"../../helpers/api\";\nimport Poem from \"../Poem/Poem\";\n\nfunction PoemPage() {\n    const [error, setError] = useState(\"\")\n    const [poem, setPoem] = useState()\n    const api = useApi();\n    const [loadPoemStatus, setLoadPoemStatus] = useState(REQ_STATUS.NOT_STARTED);\n    const {poemid} = useParams();\n    const getPoem = () => {\n        setLoadPoemStatus(REQ_STATUS.LOADING);\n        api.getPoemByID(poemid).then(response => {\n            if (response.status === \"success\") {\n                setLoadPoemStatus(REQ_STATUS.SUCCESS);\n                setPoem(response.data);\n            } else {\n                setLoadPoemStatus(REQ_STATUS.FAIL);\n                setPoem(null);\n                setError(response.message);\n            }\n        }).catch(err => {\n            setError(\"Can't load this poem.\")\n        });\n    }\n    useEffect(getPoem, []);\n    return !error ? <Poem poem={poem} setPoem={setPoem} showSkeleton={loadPoemStatus === REQ_STATUS.LOADING}/> :\n        <span className=\"error\">{error}</span>;\n}\n\nexport default PoemPage;\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/ui-msg.js",["131","132"],"import { toast } from 'react-toastify';\nconst options = {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n};\n\nexport function showSuccess(msg) {\n    toast.success(msg, options);\n}\n\nexport function showError(msg) {\n    toast.error(msg, options);\n}\n\nexport function showInfo(msg) {\n    toast.info(msg, options);\n}\n\nexport const LINE_SEND_ERR = 0;\nexport const POEM_SEND_ERR = 1;\nconst errorMsgs = {\n    LINE_SEND_ERR: [\"Your line got lost in delivery... Try again?\", \"Can't add this line right now...\",\n        \"Remember the line and try later. Something's not working right.\", \"Oops... That didn't work. Try again?\"],\n    POEM_SEND_ERR: [\"Can't do that... Try reloading.\", \"Try adding this poem later.\",\n        \"That didn't work... Reload the page and try again.\"]\n}\nexport function getErrorMessage(errNum) {\n    if (!errorMsgs.hasOwnProperty(errNum)) return \"That didn't work... Please try again later.\"\n    let possibleMessages = errorMsgs[errNum];\n    return possibleMessages[Math.floor(Math.random()*possibleMessages.length)]\n}\n","/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/canAddLineToPoem.js",[],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/utils.js",["133"],"/home/mikhailandreev/Documents/code_go/poems/front-end/src/helpers/anonymous.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":2,"column":39,"nodeType":"140","messageId":"141","endLine":2,"endColumn":47},{"ruleId":"138","severity":1,"message":"142","line":11,"column":8,"nodeType":"140","messageId":"141","endLine":11,"endColumn":24},{"ruleId":"138","severity":1,"message":"143","line":22,"column":19,"nodeType":"140","messageId":"141","endLine":22,"endColumn":27},{"ruleId":"138","severity":1,"message":"144","line":7,"column":52,"nodeType":"140","messageId":"141","endLine":7,"endColumn":60},{"ruleId":"145","severity":1,"message":"146","line":40,"column":27,"nodeType":"147","endLine":40,"endColumn":29,"suggestions":"148"},{"ruleId":"138","severity":1,"message":"149","line":1,"column":39,"nodeType":"140","messageId":"141","endLine":1,"endColumn":47},{"ruleId":"145","severity":1,"message":"150","line":15,"column":5,"nodeType":"140","endLine":15,"endColumn":14,"suggestions":"151"},{"ruleId":"138","severity":1,"message":"152","line":4,"column":9,"nodeType":"140","messageId":"141","endLine":4,"endColumn":15},{"ruleId":"138","severity":1,"message":"144","line":14,"column":52,"nodeType":"140","messageId":"141","endLine":14,"endColumn":60},{"ruleId":"138","severity":1,"message":"153","line":38,"column":11,"nodeType":"140","messageId":"141","endLine":38,"endColumn":19},{"ruleId":"138","severity":1,"message":"154","line":2,"column":45,"nodeType":"140","messageId":"141","endLine":2,"endColumn":51},{"ruleId":"145","severity":1,"message":"155","line":46,"column":11,"nodeType":"147","endLine":46,"endColumn":13,"suggestions":"156"},{"ruleId":"145","severity":1,"message":"155","line":54,"column":11,"nodeType":"147","endLine":54,"endColumn":13,"suggestions":"157"},{"ruleId":"145","severity":1,"message":"155","line":63,"column":11,"nodeType":"147","endLine":63,"endColumn":13,"suggestions":"158"},{"ruleId":"145","severity":1,"message":"155","line":67,"column":11,"nodeType":"147","endLine":67,"endColumn":13,"suggestions":"159"},{"ruleId":"145","severity":1,"message":"155","line":71,"column":11,"nodeType":"147","endLine":71,"endColumn":13,"suggestions":"160"},{"ruleId":"145","severity":1,"message":"161","line":75,"column":11,"nodeType":"147","endLine":75,"endColumn":13,"suggestions":"162"},{"ruleId":"145","severity":1,"message":"155","line":78,"column":11,"nodeType":"147","endLine":78,"endColumn":13,"suggestions":"163"},{"ruleId":"145","severity":1,"message":"164","line":98,"column":8,"nodeType":"147","endLine":98,"endColumn":14,"suggestions":"165"},{"ruleId":"138","severity":1,"message":"166","line":21,"column":11,"nodeType":"140","messageId":"141","endLine":21,"endColumn":25},{"ruleId":"145","severity":1,"message":"167","line":36,"column":9,"nodeType":"147","endLine":36,"endColumn":19,"suggestions":"168"},{"ruleId":"145","severity":1,"message":"169","line":63,"column":8,"nodeType":"147","endLine":63,"endColumn":10,"suggestions":"170"},{"ruleId":"138","severity":1,"message":"149","line":1,"column":16,"nodeType":"140","messageId":"141","endLine":1,"endColumn":24},{"ruleId":"138","severity":1,"message":"171","line":3,"column":9,"nodeType":"140","messageId":"141","endLine":3,"endColumn":19},{"ruleId":"145","severity":1,"message":"172","line":28,"column":24,"nodeType":"147","endLine":28,"endColumn":26,"suggestions":"173"},{"ruleId":"138","severity":1,"message":"174","line":23,"column":7,"nodeType":"140","messageId":"141","endLine":23,"endColumn":20},{"ruleId":"138","severity":1,"message":"175","line":24,"column":7,"nodeType":"140","messageId":"141","endLine":24,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":12,"column":5,"nodeType":"178","messageId":"179","endLine":21,"endColumn":6},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ReadAllPoemsPage' is defined but never used.","'dispatch' is assigned a value but never used.","'showInfo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRandomPoem'. Either include it or remove the dependency array.","ArrayExpression",["182"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'updateNeedsToVote'. Either include it or remove the dependency array.",["183"],"'Button' is defined but never used.","'isMobile' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useCallback has a missing dependency: 'makeRequest'. Either include it or remove the dependency array.",["184"],["185"],["186"],["187"],["188"],"React Hook useCallback has missing dependencies: 'makeRequest' and 'user'. Either include them or remove the dependency array.",["189"],["190"],"React Hook useEffect has missing dependencies: 'register' and 'registered'. Either include them or remove the dependency array.",["191"],"'scrollObserver' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'setPoems'. Either exclude it or remove the dependency array.",["192"],"React Hook useEffect has a missing dependency: 'getPoemsInit'. Either include it or remove the dependency array.",["193"],"'REQ_STATUS' is defined but never used.","React Hook useEffect has missing dependencies: 'api' and 'poemid'. Either include them or remove the dependency array.",["194"],"'LINE_SEND_ERR' is assigned a value but never used.","'POEM_SEND_ERR' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"199","fix":"201"},{"desc":"199","fix":"202"},{"desc":"199","fix":"203"},{"desc":"199","fix":"204"},{"desc":"205","fix":"206"},{"desc":"199","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [getRandomPoem]",{"range":"216","text":"217"},"Update the dependencies array to be: [updateNeedsToVote]",{"range":"218","text":"219"},"Update the dependencies array to be: [makeRequest]",{"range":"220","text":"221"},{"range":"222","text":"221"},{"range":"223","text":"221"},{"range":"224","text":"221"},{"range":"225","text":"221"},"Update the dependencies array to be: [makeRequest, user]",{"range":"226","text":"227"},{"range":"228","text":"221"},"Update the dependencies array to be: [register, registered, user]",{"range":"229","text":"230"},"Update the dependencies array to be: []",{"range":"231","text":"232"},"Update the dependencies array to be: [getPoemsInit]",{"range":"233","text":"234"},"Update the dependencies array to be: [api, poemid]",{"range":"235","text":"236"},[1631,1633],"[getRandomPoem]",[504,510],"[updateNeedsToVote]",[1714,1716],"[makeRequest]",[1991,1993],[2358,2360],[2512,2514],[2663,2665],[2822,2824],"[makeRequest, user]",[3011,3013],[3614,3620],"[register, registered, user]",[1634,1644],"[]",[2498,2500],"[getPoemsInit]",[1000,1002],"[api, poemid]"]